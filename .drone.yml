kind: pipeline
name: "helm-builder-docker"

steps:

- name: start docker
  image: docker:dind
  detach: true
  privileged: true
  volumes:
  - name: dockersock
    path: /var/run/

- name: "docker build helm-builder"
  image: keyporttech/helm-builder:2.12.2
  volumes:
  - name: dockersock
    path: /var/run/
  commands:
  - "export LATEST_KUBERNETES_RELEASE=$(curl -sSL https://dl.k8s.io/release/stable.txt)"
  - "export LATEST_HELM_RELEASE=$(./latestHelmVersion.sh)"
  - "docker build --build-arg HELM_VERSION=$(./latestHelmVersion.sh) --build-arg KUBERNETES_VERSION=$(curl -sSL https://dl.k8s.io/release/stable.txt) ./docker/helm-builder"
  when:
    event:
      include:
      - pull_request
      exclude:
      - push

- name: "auto github release and dockerhub publish helm-builder"
  environment:
    DOCKER_IMAGE: keyporttech/helm-builder
    CURRENT_HELM_RELEASE: 2.12.1
    CURRENT_DOCKER_TAG: 2.12.1-3
    DOCKERHUB_USERNAME:
      from_secret: USERNAME
    DOCKERHUB_PASSWORD:
      from_secret: PASSWORD
    GITHUB_TOKEN:
      from secret: GITHUBTOKEN
    GITHUB_KEY:
      from secret: GITHUBSSHKEY64
  image: keyporttech/helm-builder:2.12.2
  volumes:
  - name: dockersock
    path: /var/run/
  commands:
  - "./release-publish.sh"
  - "echo $GITHUB_KEY | base64 -d > /var/run/id_rsa"
  - 'git config --global user.email "github@keyporttech.com"'
  - 'git config --global user.name "keyporttech-bot"'
  - 'git add *'
  - git remote add upstream $DRONE_GIT_SSH_URL
  - 'GIT_SSH_COMMAND="ssh -i /var/run/id_rsa -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" git push --set-upstream upstream $DRONE_BRANCH'
  when:
    event:
      include:
      - push
      exclude:
      - pull_request
    # branch:
    # - master

volumes:
- name: dockersock
  temp: {}
